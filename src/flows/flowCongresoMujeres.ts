import { addKeyword } from '@builderbot/bot'
import { PostgreSQLAdapter as Database } from '@builderbot/database-postgres'
import { MetaProvider as Provider } from '@builderbot/provider-meta'
import { resetInactividad, stopInactividad } from '~/utils/idle';
import { flowAyuda } from './flowAyuda';
import { flowCIC } from './flowCic';
import { flowGenero } from './flowGenero';
import flowLicencias from './flowLicencias';
import flowMenu from './flowMenu';
import flowTramites from './flowTramites';
import { flowLlamarMenu } from './flowLlamarMenu';

let errores = 0;
export const flowCongresoMujeres = addKeyword<Provider, Database>('congreso de mujeres lideres')
.addAnswer('Si quer√©s inscribirte en este evento √∫nico o conocer m√°s sobre el Congreso, seleccion√° alguna de las tres opciones üëá',{
    buttons: [
    {body: '‚úçÔ∏è Inscripci√≥n'},
    {body: 'üíú Programa'},
    {body: 'ü§≥ Redes'},
]}
)
.addAction({ capture: true }, async (ctx, { provider, endFlow, flowDynamic, gotoFlow, fallBack }) => {
    const opcion = ctx.body;
    console.log(opcion)
    const nombre = ctx.name;
    if (!["ü§≥ Redes","üíú Programa","‚úçÔ∏è Inscripci√≥n","tramites", "tr√°mites", "cic", "g√©nero", "genero", "licencia", "licencias", "menu", "men√∫", "hola", "gracias", "no, gracias", "Volver al menu", "volver al men√∫"].includes(opcion)) {
        errores++;
        resetInactividad(ctx, gotoFlow, 90000)
            if (errores > 2 )
            {
                stopInactividad(ctx)
                return gotoFlow(flowAyuda);
            }
        await flowDynamic('No te entiendo üò¢ Necesitas ayuda? Escrib√≠ la palabra *Men√∫* para volver a empezar')
    }
    switch (opcion) {
        case '‚úçÔ∏è Inscripci√≥n': {
            stopInactividad(ctx)
            await flowDynamic('Complet√° este formulario y ya est√°s anotada para participar de este gran Congreso https://bit.ly/3congresodemujeres  ‚úçÔ∏èüíú')
            return gotoFlow(flowLlamarMenu)
        }
        case 'üíú Programa': {
            const id = ctx.from;
            stopInactividad(ctx)
            await provider.sendImage(id, 'src/media/programa_congreso.png', '¬°Conoc√© las disertantes incre√≠bles que nos acompa√±ar√°n!');
            return gotoFlow(flowLlamarMenu)
        }
        case 'ü§≥ Redes': {
            stopInactividad(ctx)
            await flowDynamic('Seguinos en Instagram www.instagram.com/congresoregionalmujereslideres\nO en Facebook https://www.facebook.com/congresoregionalmujereslideres?mibextid=LQQJ4d üì≤')
            return gotoFlow(flowLlamarMenu)
        }
    case 'cic': {
        stopInactividad(ctx)
        return gotoFlow(flowCIC)
    }
    case 'tramites': {
        stopInactividad(ctx)
        return gotoFlow(flowTramites)
    }
    case 'tramite': {
        stopInactividad(ctx)
        return gotoFlow(flowTramites)
    }
    case 'tr√°mite': {
        stopInactividad(ctx)
        return gotoFlow(flowTramites)
    }
    case 'tr√°mites': {
        stopInactividad(ctx)
        return gotoFlow(flowTramites)
    }
    case 'genero': {
        stopInactividad(ctx)
        return gotoFlow(flowGenero)
    }
    case 'g√©nero': {
        stopInactividad(ctx)
        return gotoFlow(flowGenero)
    }
    case 'licencia': {
        stopInactividad(ctx)
        return gotoFlow(flowLicencias)
    }
    case 'licencias': {
        stopInactividad(ctx)
        return gotoFlow(flowLicencias)
    }
    case 'men√∫': {
        stopInactividad(ctx)
        return gotoFlow(flowMenu)
    }
    case 'menu': {
        stopInactividad(ctx)
        return gotoFlow(flowMenu)
    }
    case 'volver al men√∫': {
        stopInactividad(ctx)
        return gotoFlow(flowMenu)
    }
    case 'Volver al men√∫': {
        stopInactividad(ctx)
        return gotoFlow(flowMenu)
    }
    case 'Volver al menu': {
        stopInactividad(ctx)
        return gotoFlow(flowMenu)
    }
        case 'no, gracias': {
        stopInactividad(ctx)
        return endFlow(`De nada ${nombre} üòÉ. Si necesitas informaci√≥n estoy disponible 24/7.`)
    }
    default: await flowDynamic('No te entiendo üò¢ Necesitas ayuda? Escrib√≠ la palabra *Men√∫* para volver a empezar')
    }
});

